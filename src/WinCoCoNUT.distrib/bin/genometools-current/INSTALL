Building GenomeTools
--------------------

Invoke GNU make, e.g.:

$ make [argument ...]

to build GenomeTools.

On *BSD GNU make is often called ``gmake''.
Possible arguments:

- opt=no to disable optimization
- assert=no to disable assertions

Example call to build GenomeTools without assertions on a system where GNU make
is called ``gmake'':

$ gmake assert=no


Building GenomeTools without the curses library:
------------------------------------------------

On systems without an installed curses library invoke make as above with the
argument curses=no

If you invoked make without curses=no beforehand, do not forget to run `make
clean` before running `make curses=no`.


Building GenomeTools with the view tool (requires installed cairo library):
---------------------------------------------------------------------------

invoke make as above with the argument libgtview=yes


Building GenomeTools as a Univeral Binary (on Mac OS X):
--------------------------------------------------------

invoke make as above with the argument universal=yes


Testing GenomeTools (optional)
------------------------------

Call

$ make test

to make sure your GenomeTools build went fine.
This step requires an installed Ruby interpreter (see
http://www.ruby-lang.org/en/ for informations on Ruby).


Installing GenomeTools
----------------------

To install the ``gt'' binary and the ``libgt'' library (plus header files) on
your system invoke

$ make install

Per default the files are installed under /usr/local
You can change this with the prefix argument. For example, to install under
/usr invoke

# make prefix=/usr install



Install on windows using Cygwin
----------------------------------

make of version 1.1.2 has updated we have folloig things

in INCLUDEOPT                 -I/usr/include/ncurses

Remove -fPIC and comment      #GT_CFLAGS:=-g -Wall -Werror -Wunused-parameter -pipe -Wpointer-arith
                
Then change it to 32 bit      FILE_OFFSET_BITS=32

Add path of the curses under      

                              ifeq ($(curl),yes) and ifeq ($(libgtview),yes)
                              {
                              GT_CPPFLAGS += -I/usr/include/curl -I/usr/local/include/curl -I/usr/include/ncurses
                              }
                              
                              And it can work in another pass


Final note
-----------

Please look at http://genometools.org for updates and report bugs if you
encounter any.

Enjoy!
